paths:
  # Endpoint to create a new organization account
  /auth/register:
    # POST operation
    post:
      tags:
      - auth

      summary: Creates a new organization member

      parameters:
      - in: body
        name: body
        description: A JSON object containing the organization account information with member credentials
        required: true
        schema:
          $ref: '#/definitions/Register'  

      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/OrganizationResponse'
        '409':
          description: Duplicate organization already exists
          schema:
            $ref: '#/definitions/ErrorResponse'

  # Endpoint to login with an organization
  /auth/login:
    # POST operation
    post:
      tags:
      - auth

      summary: Logs an organization member in

      parameters:
      - in: body
        name: body
        description: A JSON object containing the user's credentials to login
        required: true
        schema:
          $ref: '#/definitions/Login'  

      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/LoginResponse'
        '401':
          description: Invalid password or email supplied
          schema:
            $ref: '#/definitions/ErrorResponse'

definitions:
  # Register schema
  Register:
    type: object
    required:
    - organizationName
    - organizationKey
    - email
    - password
    properties:
      organizationName:
        type: string
      organizationKey:
        type: string
      email:
        type: string
        format: email
      password:
        type: string
        format: password

  # Login schema
  Login:
    type: object
    required:
    - email
    - password
    properties:
      email:
        type: string
        format: email
      password:
        type: string
        format: password

  # OrganizationResponse schema
  OrganizationResponse:
    type: object
    required:
    - status
    - data
    properties:
      status:
        type: string
      data:
        type: object
        required:
        - message
        - organizationId
        - token
        properties:
          message:
            type: string
          organizationId:
            type: string
          token:
            type: string

  # LoginResponse schema
  LoginResponse:
    type: object
    required:
    - status
    - data
    properties:
      status:
        type: string
      data:
        type: object
        required:
        - organizationId
        - organizationName
        - message
        - token
        properties:
          organizationName:
            type: string
          organizationId:
            type: string
          message:
            type: string
          token:
            type: string

  # ErrorResponse schema
  ErrorResponse:
    type: object
    required:
    - status
    - error
    properties:
      status:
        type: string
      error:
        type: string